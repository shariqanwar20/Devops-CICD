name: Build and Deploy to GKE

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: vocal-orbit-412510
  GKE_CLUSTER: iba-cluster
  GKE_ZONE: us-central1
  IMAGE: todo-app
  IMAGE_TAG: latest
  GAR_ZONE: us-central1
  GAR_REPO: iba-gar

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      # Setup gcloud CLI
      - id: "auth"
        name: Setup gcloud CLI
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GKE_SA_KEY }}"

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - name: Docker configuration
        run: |-
          gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://$GAR_ZONE-docker.pkg.dev

      # Get the GKE credentials so we can deploy to the cluster
      - name: Set up GKE credentials
        uses: google-github-actions/get-gke-credentials@v0
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}

      # Build the Docker image
      - name: Docker Build Image
        run: |-
          cd application 
          docker build \
            --tag "$GAR_ZONE-docker.pkg.dev/$PROJECT_ID/$GAR_REPO/$IMAGE:$IMAGE_TAG" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            .
      # Push the Docker image to Google Container Registry
      - name: Docker Push Image
        run: |-
          docker push "$GAR_ZONE-docker.pkg.dev/$PROJECT_ID/$GAR_REPO/$IMAGE:$IMAGE_TAG"

      # Deploy the Docker image to the GKE cluster
      - name: Deploy to GKE
        run: |-
          kubectl apply -f k8/web-application.yaml
          kubectl apply -f k8/load-balancer.yaml
          kubectl get pods
